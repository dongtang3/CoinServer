name: Build, Push, and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Maven
        run: sudo apt-get install -y maven

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR using AWS CLI
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 853228521229.dkr.ecr.us-east-1.amazonaws.com

      - name: Maven Build
        run: mvn clean package

      - name: Build, Tag, and Push Docker Images
        env:
          AWS_ACCOUNT_ID: ${{secrets.AWS_ACCOUNT_ID}}
          AWS_REGION: ${{secrets.AWS_REGION}}
          SERVICE_PREFIX: ${{secrets.SERVICE_PREFIX}}
        run: |
          docker build -t account-service ./account
          docker tag account-service:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$SERVICE_PREFIX/account-service:latest
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$SERVICE_PREFIX/account-service:latest
          
          docker build -t admin-service ./admin
          docker tag admin-service:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$SERVICE_PREFIX/admin-service:latest
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$SERVICE_PREFIX/admin-service:latest
          
          docker build -t eureka-service ./discovery
          docker tag eureka-service:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$SERVICE_PREFIX/eureka-service:latest
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$SERVICE_PREFIX/eureka-service:latest
          
          docker build -t gateway-service ./gateway
          docker tag gateway-service:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$SERVICE_PREFIX/gateway-service:latest
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$SERVICE_PREFIX/gateway-service:latest
          
          docker build -t exchange-service ./exchange
          docker tag exchange-service:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$SERVICE_PREFIX/exchange-service:latest
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$SERVICE_PREFIX/exchange-service:latest
          
          docker build -t market-service ./market
          docker tag market-service:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$SERVICE_PREFIX/market-service:latest
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$SERVICE_PREFIX/market-service:latest
          
          docker build -t statistics-service ./statistics
          docker tag statistics-service:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$SERVICE_PREFIX/statistics-service:latest
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$SERVICE_PREFIX/statistics-service:latest

      - name: Deploy to EC2
        env:
          AWS_REGION: us-east-1
          AWS_ACCOUNT_ID: 853228521229
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_KEY: ${{ secrets.EC2_KEY }}
        run: |
          echo "${{ secrets.EC2_KEY }}" > ec2_key && chmod 600 ec2_key
          ssh -o StrictHostKeyChecking=no -i ec2_key $EC2_USER@$EC2_HOST << EOF
            # Install Docker if not already installed
            if ! command -v docker &> /dev/null
            then
                sudo yum update -y
                sudo amazon-linux-extras install docker -y
                sudo service docker start
                sudo usermod -a -G docker ec2-user
            fi
          
            # Install Docker Compose if not already installed
            if ! command -v docker-compose &> /dev/null
            then
                sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
                sudo chmod +x /usr/local/bin/docker-compose
            fi
          
            # Login to ECR and pull latest images
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
            docker-compose -f /home/ec2-user/docker-compose.yml pull
            docker-compose -f /home/ec2-user/docker-compose.yml up -d
          EOF
